digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] module.INTERNET_GATEWAY.aws_eip.lb (expand)" [label = "module.INTERNET_GATEWAY.aws_eip.lb", shape = "box"]
		"[root] module.INTERNET_GATEWAY.aws_internet_gateway.gw (expand)" [label = "module.INTERNET_GATEWAY.aws_internet_gateway.gw", shape = "box"]
		"[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)" [label = "module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw", shape = "box"]
		"[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)" [label = "module.PRIVATE_SUBNET_01.aws_subnet.main", shape = "box"]
		"[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)" [label = "module.PUBLIC_SUBNET_01.aws_subnet.main", shape = "box"]
		"[root] module.ROUTE_TABLE_ASSOCIATION.aws_main_route_table_association.associate (expand)" [label = "module.ROUTE_TABLE_ASSOCIATION.aws_main_route_table_association.associate", shape = "box"]
		"[root] module.ROUTE_TABLE_ASSOCIATION.aws_route_table.demo-rt (expand)" [label = "module.ROUTE_TABLE_ASSOCIATION.aws_route_table.demo-rt", shape = "box"]
		"[root] module.SECURITY_GROUPS.aws_security_group.allow_ssh (expand)" [label = "module.SECURITY_GROUPS.aws_security_group.allow_ssh", shape = "box"]
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" [label = "module.VIRTUALMACHINE01.aws_instance.web", shape = "box"]
		"[root] module.VIRTUALMACHINE01.data.aws_ami.ubuntu (expand)" [label = "module.VIRTUALMACHINE01.data.aws_ami.ubuntu", shape = "box"]
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" [label = "module.VIRTUALMACHINE02.aws_instance.web", shape = "box"]
		"[root] module.VIRTUALMACHINE02.data.aws_ami.ubuntu (expand)" [label = "module.VIRTUALMACHINE02.data.aws_ami.ubuntu", shape = "box"]
		"[root] module.VPC.aws_vpc.base (expand)" [label = "module.VPC.aws_vpc.base", shape = "box"]
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"]" [label = "provider[\"registry.terraform.io/hashicorp/aws\"]", shape = "diamond"]
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.INTERNET_GATEWAY (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.PRIVATE_SUBNET_01 (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.PUBLIC_SUBNET_01 (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.ROUTE_TABLE_ASSOCIATION (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.SECURITY_GROUPS (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.VIRTUALMACHINE01 (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.VIRTUALMACHINE02 (close)"
		"[root] meta.count-boundary (EachMode fixup)" -> "[root] module.VPC (close)"
		"[root] module.INTERNET_GATEWAY (close)" -> "[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)"
		"[root] module.INTERNET_GATEWAY (close)" -> "[root] module.INTERNET_GATEWAY.output.internet_gateway_id (expand)"
		"[root] module.INTERNET_GATEWAY.aws_eip.lb (expand)" -> "[root] module.INTERNET_GATEWAY (expand)"
		"[root] module.INTERNET_GATEWAY.aws_eip.lb (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.INTERNET_GATEWAY.aws_internet_gateway.gw (expand)" -> "[root] module.INTERNET_GATEWAY.var.vpc_id (expand)"
		"[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)" -> "[root] module.INTERNET_GATEWAY.aws_eip.lb (expand)"
		"[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)" -> "[root] module.INTERNET_GATEWAY.aws_internet_gateway.gw (expand)"
		"[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)" -> "[root] module.INTERNET_GATEWAY.var.subnet_id (expand)"
		"[root] module.INTERNET_GATEWAY.output.internet_gateway_id (expand)" -> "[root] module.INTERNET_GATEWAY.aws_internet_gateway.gw (expand)"
		"[root] module.INTERNET_GATEWAY.var.subnet_id (expand)" -> "[root] module.INTERNET_GATEWAY (expand)"
		"[root] module.INTERNET_GATEWAY.var.subnet_id (expand)" -> "[root] module.PUBLIC_SUBNET_01.output.subnet_id (expand)"
		"[root] module.INTERNET_GATEWAY.var.vpc_id (expand)" -> "[root] module.INTERNET_GATEWAY (expand)"
		"[root] module.INTERNET_GATEWAY.var.vpc_id (expand)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.PRIVATE_SUBNET_01 (close)" -> "[root] module.PRIVATE_SUBNET_01.output.subnet_id (expand)"
		"[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PRIVATE_SUBNET_01.var.cidr_block (expand)"
		"[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PRIVATE_SUBNET_01.var.make_subnet_public (expand)"
		"[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PRIVATE_SUBNET_01.var.subnet_name_tag (expand)"
		"[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PRIVATE_SUBNET_01.var.vpc_id (expand)"
		"[root] module.PRIVATE_SUBNET_01.output.subnet_id (expand)" -> "[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)"
		"[root] module.PRIVATE_SUBNET_01.var.cidr_block (expand)" -> "[root] module.PRIVATE_SUBNET_01 (expand)"
		"[root] module.PRIVATE_SUBNET_01.var.make_subnet_public (expand)" -> "[root] module.PRIVATE_SUBNET_01 (expand)"
		"[root] module.PRIVATE_SUBNET_01.var.subnet_name_tag (expand)" -> "[root] module.PRIVATE_SUBNET_01 (expand)"
		"[root] module.PRIVATE_SUBNET_01.var.vpc_id (expand)" -> "[root] module.PRIVATE_SUBNET_01 (expand)"
		"[root] module.PRIVATE_SUBNET_01.var.vpc_id (expand)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.PUBLIC_SUBNET_01 (close)" -> "[root] module.PUBLIC_SUBNET_01.output.subnet_id (expand)"
		"[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PUBLIC_SUBNET_01.var.cidr_block (expand)"
		"[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PUBLIC_SUBNET_01.var.make_subnet_public (expand)"
		"[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PUBLIC_SUBNET_01.var.subnet_name_tag (expand)"
		"[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)" -> "[root] module.PUBLIC_SUBNET_01.var.vpc_id (expand)"
		"[root] module.PUBLIC_SUBNET_01.output.subnet_id (expand)" -> "[root] module.PUBLIC_SUBNET_01.aws_subnet.main (expand)"
		"[root] module.PUBLIC_SUBNET_01.var.cidr_block (expand)" -> "[root] module.PUBLIC_SUBNET_01 (expand)"
		"[root] module.PUBLIC_SUBNET_01.var.make_subnet_public (expand)" -> "[root] module.PUBLIC_SUBNET_01 (expand)"
		"[root] module.PUBLIC_SUBNET_01.var.subnet_name_tag (expand)" -> "[root] module.PUBLIC_SUBNET_01 (expand)"
		"[root] module.PUBLIC_SUBNET_01.var.vpc_id (expand)" -> "[root] module.PUBLIC_SUBNET_01 (expand)"
		"[root] module.PUBLIC_SUBNET_01.var.vpc_id (expand)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION (close)" -> "[root] module.ROUTE_TABLE_ASSOCIATION.aws_main_route_table_association.associate (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.aws_main_route_table_association.associate (expand)" -> "[root] module.ROUTE_TABLE_ASSOCIATION.aws_route_table.demo-rt (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.aws_route_table.demo-rt (expand)" -> "[root] module.ROUTE_TABLE_ASSOCIATION.var.internet_gateway_id (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.aws_route_table.demo-rt (expand)" -> "[root] module.ROUTE_TABLE_ASSOCIATION.var.vpc_id (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.var.internet_gateway_id (expand)" -> "[root] module.INTERNET_GATEWAY.output.internet_gateway_id (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.var.internet_gateway_id (expand)" -> "[root] module.ROUTE_TABLE_ASSOCIATION (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.var.vpc_id (expand)" -> "[root] module.ROUTE_TABLE_ASSOCIATION (expand)"
		"[root] module.ROUTE_TABLE_ASSOCIATION.var.vpc_id (expand)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.SECURITY_GROUPS (close)" -> "[root] module.SECURITY_GROUPS.output.security_group_id (expand)"
		"[root] module.SECURITY_GROUPS.aws_security_group.allow_ssh (expand)" -> "[root] module.SECURITY_GROUPS.var.vpc_id (expand)"
		"[root] module.SECURITY_GROUPS.output.security_group_id (expand)" -> "[root] module.SECURITY_GROUPS.aws_security_group.allow_ssh (expand)"
		"[root] module.SECURITY_GROUPS.var.vpc_id (expand)" -> "[root] module.SECURITY_GROUPS (expand)"
		"[root] module.SECURITY_GROUPS.var.vpc_id (expand)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.VIRTUALMACHINE01 (close)" -> "[root] module.VIRTUALMACHINE01.aws_instance.web (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.data.aws_ami.ubuntu (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.var.instance_key_name (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.var.instance_name_tag (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.var.instance_type (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.var.security_groups (expand)"
		"[root] module.VIRTUALMACHINE01.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE01.var.subnet_id (expand)"
		"[root] module.VIRTUALMACHINE01.data.aws_ami.ubuntu (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE01.data.aws_ami.ubuntu (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.VIRTUALMACHINE01.var.instance_key_name (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE01.var.instance_name_tag (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE01.var.instance_type (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE01.var.security_groups (expand)" -> "[root] module.SECURITY_GROUPS.output.security_group_id (expand)"
		"[root] module.VIRTUALMACHINE01.var.security_groups (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE01.var.subnet_id (expand)" -> "[root] module.PUBLIC_SUBNET_01.output.subnet_id (expand)"
		"[root] module.VIRTUALMACHINE01.var.subnet_id (expand)" -> "[root] module.VIRTUALMACHINE01 (expand)"
		"[root] module.VIRTUALMACHINE02 (close)" -> "[root] module.VIRTUALMACHINE02.aws_instance.web (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.data.aws_ami.ubuntu (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.var.instance_key_name (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.var.instance_name_tag (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.var.instance_type (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.var.security_groups (expand)"
		"[root] module.VIRTUALMACHINE02.aws_instance.web (expand)" -> "[root] module.VIRTUALMACHINE02.var.subnet_id (expand)"
		"[root] module.VIRTUALMACHINE02.data.aws_ami.ubuntu (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VIRTUALMACHINE02.data.aws_ami.ubuntu (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.VIRTUALMACHINE02.var.instance_key_name (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VIRTUALMACHINE02.var.instance_name_tag (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VIRTUALMACHINE02.var.instance_type (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VIRTUALMACHINE02.var.security_groups (expand)" -> "[root] module.SECURITY_GROUPS.output.security_group_id (expand)"
		"[root] module.VIRTUALMACHINE02.var.security_groups (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VIRTUALMACHINE02.var.subnet_id (expand)" -> "[root] module.PUBLIC_SUBNET_01.output.subnet_id (expand)"
		"[root] module.VIRTUALMACHINE02.var.subnet_id (expand)" -> "[root] module.VIRTUALMACHINE02 (expand)"
		"[root] module.VPC (close)" -> "[root] module.VPC.output.vpc_id (expand)"
		"[root] module.VPC.aws_vpc.base (expand)" -> "[root] module.VPC.var.cidr_block (expand)"
		"[root] module.VPC.aws_vpc.base (expand)" -> "[root] module.VPC.var.vpc_name_tag (expand)"
		"[root] module.VPC.aws_vpc.base (expand)" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"]"
		"[root] module.VPC.output.vpc_id (expand)" -> "[root] module.VPC.aws_vpc.base (expand)"
		"[root] module.VPC.var.cidr_block (expand)" -> "[root] module.VPC (expand)"
		"[root] module.VPC.var.vpc_name_tag (expand)" -> "[root] module.VPC (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.INTERNET_GATEWAY.aws_nat_gateway.nat_gw (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.PRIVATE_SUBNET_01.aws_subnet.main (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.ROUTE_TABLE_ASSOCIATION.aws_main_route_table_association.associate (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.VIRTUALMACHINE01.aws_instance.web (expand)"
		"[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)" -> "[root] module.VIRTUALMACHINE02.aws_instance.web (expand)"
		"[root] root" -> "[root] meta.count-boundary (EachMode fixup)"
		"[root] root" -> "[root] provider[\"registry.terraform.io/hashicorp/aws\"] (close)"
	}
}

